
16bitTC_test.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000012  00800100  000001bc  00000250  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000001bc  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000003  00800112  00800112  00000262  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000262  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000294  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000028  00000000  00000000  000002d4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000008a0  00000000  00000000  000002fc  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000007bf  00000000  00000000  00000b9c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000002af  00000000  00000000  0000135b  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000064  00000000  00000000  0000160c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000040f  00000000  00000000  00001670  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000000a2  00000000  00000000  00001a7f  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000018  00000000  00000000  00001b21  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	48 c0       	rjmp	.+144    	; 0xc6 <__bad_interrupt>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	57 c0       	rjmp	.+174    	; 0x114 <__vector_25>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	ec eb       	ldi	r30, 0xBC	; 188
  a0:	f1 e0       	ldi	r31, 0x01	; 1
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a2 31       	cpi	r26, 0x12	; 18
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	a2 e1       	ldi	r26, 0x12	; 18
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	a5 31       	cpi	r26, 0x15	; 21
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	02 d0       	rcall	.+4      	; 0xc8 <main>
  c4:	79 c0       	rjmp	.+242    	; 0x1b8 <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <main>:
volatile unsigned char time_s = 0;
volatile unsigned char FND_flag=0, edge_flag = 0;

int main()
{
	DDRA = 0xff;
  c8:	8f ef       	ldi	r24, 0xFF	; 255
  ca:	8a bb       	out	0x1a, r24	; 26
	DDRE = 0x00;
  cc:	12 b8       	out	0x02, r1	; 2
	
	TCCR3A = 0x00;
  ce:	10 92 8b 00 	sts	0x008B, r1	; 0x80008b <__TEXT_REGION_LENGTH__+0x7e008b>
	TCCR3B = 0x45;
  d2:	85 e4       	ldi	r24, 0x45	; 69
  d4:	80 93 8a 00 	sts	0x008A, r24	; 0x80008a <__TEXT_REGION_LENGTH__+0x7e008a>
	EIMSK = 0x20;
  d8:	80 e2       	ldi	r24, 0x20	; 32
  da:	89 bf       	out	0x39, r24	; 57
	EIFR |= 1<<ICF3;
  dc:	88 b7       	in	r24, 0x38	; 56
  de:	80 62       	ori	r24, 0x20	; 32
  e0:	88 bf       	out	0x38, r24	; 56
	
	sei();
  e2:	78 94       	sei
	PORTA = FND_DATA_TBL[0];
  e4:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
  e8:	8b bb       	out	0x1b, r24	; 27
	while(1)
	{
		if(FND_flag)
		{
			if(time_s > 15)
				time_s = 15;
  ea:	9f e0       	ldi	r25, 0x0F	; 15
	
	sei();
	PORTA = FND_DATA_TBL[0];
	while(1)
	{
		if(FND_flag)
  ec:	80 91 13 01 	lds	r24, 0x0113	; 0x800113 <FND_flag>
  f0:	88 23       	and	r24, r24
  f2:	e1 f3       	breq	.-8      	; 0xec <main+0x24>
		{
			if(time_s > 15)
  f4:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <time_s>
  f8:	80 31       	cpi	r24, 0x10	; 16
  fa:	10 f0       	brcs	.+4      	; 0x100 <main+0x38>
				time_s = 15;
  fc:	90 93 14 01 	sts	0x0114, r25	; 0x800114 <time_s>
				
			PORTA = FND_DATA_TBL[time_s];
 100:	e0 91 14 01 	lds	r30, 0x0114	; 0x800114 <time_s>
 104:	f0 e0       	ldi	r31, 0x00	; 0
 106:	e0 50       	subi	r30, 0x00	; 0
 108:	ff 4f       	sbci	r31, 0xFF	; 255
 10a:	80 81       	ld	r24, Z
 10c:	8b bb       	out	0x1b, r24	; 27
			FND_flag = 0;
 10e:	10 92 13 01 	sts	0x0113, r1	; 0x800113 <FND_flag>
 112:	ec cf       	rjmp	.-40     	; 0xec <main+0x24>

00000114 <__vector_25>:
	}
	return 0;
}

SIGNAL(TIMER3_CAPT_vect)
{	
 114:	1f 92       	push	r1
 116:	0f 92       	push	r0
 118:	0f b6       	in	r0, 0x3f	; 63
 11a:	0f 92       	push	r0
 11c:	11 24       	eor	r1, r1
 11e:	5f 93       	push	r21
 120:	6f 93       	push	r22
 122:	7f 93       	push	r23
 124:	8f 93       	push	r24
 126:	9f 93       	push	r25
 128:	af 93       	push	r26
 12a:	bf 93       	push	r27
	cli();
 12c:	f8 94       	cli
	
	unsigned int count_check;
	
	if(edge_flag == 0)
 12e:	80 91 12 01 	lds	r24, 0x0112	; 0x800112 <__data_end>
 132:	81 11       	cpse	r24, r1
 134:	0f c0       	rjmp	.+30     	; 0x154 <__vector_25+0x40>
	{
		TCCR3B = 0x05;
 136:	85 e0       	ldi	r24, 0x05	; 5
 138:	80 93 8a 00 	sts	0x008A, r24	; 0x80008a <__TEXT_REGION_LENGTH__+0x7e008a>
		TCNT3 = 0;
 13c:	10 92 89 00 	sts	0x0089, r1	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 140:	10 92 88 00 	sts	0x0088, r1	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
		ICR3 = 0;
 144:	10 92 81 00 	sts	0x0081, r1	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
 148:	10 92 80 00 	sts	0x0080, r1	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
		edge_flag = 1;
 14c:	81 e0       	ldi	r24, 0x01	; 1
 14e:	80 93 12 01 	sts	0x0112, r24	; 0x800112 <__data_end>
 152:	11 c0       	rjmp	.+34     	; 0x176 <__vector_25+0x62>
	}
	else
	{
		TCCR3B = 0x45;
 154:	85 e4       	ldi	r24, 0x45	; 69
 156:	80 93 8a 00 	sts	0x008A, r24	; 0x80008a <__TEXT_REGION_LENGTH__+0x7e008a>
		count_check = ICR3;
 15a:	80 91 80 00 	lds	r24, 0x0080	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
 15e:	90 91 81 00 	lds	r25, 0x0081	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
		
		time_s = count_check/1440;
 162:	60 ea       	ldi	r22, 0xA0	; 160
 164:	75 e0       	ldi	r23, 0x05	; 5
 166:	14 d0       	rcall	.+40     	; 0x190 <__udivmodhi4>
 168:	60 93 14 01 	sts	0x0114, r22	; 0x800114 <time_s>
		
		FND_flag = 1;
 16c:	81 e0       	ldi	r24, 0x01	; 1
 16e:	80 93 13 01 	sts	0x0113, r24	; 0x800113 <FND_flag>
		edge_flag = 0;
 172:	10 92 12 01 	sts	0x0112, r1	; 0x800112 <__data_end>
	}
	sei();
 176:	78 94       	sei
 178:	bf 91       	pop	r27
 17a:	af 91       	pop	r26
 17c:	9f 91       	pop	r25
 17e:	8f 91       	pop	r24
 180:	7f 91       	pop	r23
 182:	6f 91       	pop	r22
 184:	5f 91       	pop	r21
 186:	0f 90       	pop	r0
 188:	0f be       	out	0x3f, r0	; 63
 18a:	0f 90       	pop	r0
 18c:	1f 90       	pop	r1
 18e:	18 95       	reti

00000190 <__udivmodhi4>:
 190:	aa 1b       	sub	r26, r26
 192:	bb 1b       	sub	r27, r27
 194:	51 e1       	ldi	r21, 0x11	; 17
 196:	07 c0       	rjmp	.+14     	; 0x1a6 <__udivmodhi4_ep>

00000198 <__udivmodhi4_loop>:
 198:	aa 1f       	adc	r26, r26
 19a:	bb 1f       	adc	r27, r27
 19c:	a6 17       	cp	r26, r22
 19e:	b7 07       	cpc	r27, r23
 1a0:	10 f0       	brcs	.+4      	; 0x1a6 <__udivmodhi4_ep>
 1a2:	a6 1b       	sub	r26, r22
 1a4:	b7 0b       	sbc	r27, r23

000001a6 <__udivmodhi4_ep>:
 1a6:	88 1f       	adc	r24, r24
 1a8:	99 1f       	adc	r25, r25
 1aa:	5a 95       	dec	r21
 1ac:	a9 f7       	brne	.-22     	; 0x198 <__udivmodhi4_loop>
 1ae:	80 95       	com	r24
 1b0:	90 95       	com	r25
 1b2:	bc 01       	movw	r22, r24
 1b4:	cd 01       	movw	r24, r26
 1b6:	08 95       	ret

000001b8 <_exit>:
 1b8:	f8 94       	cli

000001ba <__stop_program>:
 1ba:	ff cf       	rjmp	.-2      	; 0x1ba <__stop_program>
