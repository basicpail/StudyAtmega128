
0618Exam.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000007a  00800100  00000a54  00000ae8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000a54  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000010  0080017a  0080017a  00000b62  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000b62  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000bc0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000068  00000000  00000000  00000c00  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000f4c  00000000  00000000  00000c68  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000009a1  00000000  00000000  00001bb4  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000069f  00000000  00000000  00002555  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000012c  00000000  00000000  00002bf4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000478  00000000  00000000  00002d20  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000006f8  00000000  00000000  00003198  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000058  00000000  00000000  00003890  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	80 c0       	rjmp	.+256    	; 0x106 <__vector_1>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	48 c0       	rjmp	.+144    	; 0xc6 <__bad_interrupt>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e4 e5       	ldi	r30, 0x54	; 84
  a0:	fa e0       	ldi	r31, 0x0A	; 10
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	aa 37       	cpi	r26, 0x7A	; 122
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	aa e7       	ldi	r26, 0x7A	; 122
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	aa 38       	cpi	r26, 0x8A	; 138
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	26 d1       	rcall	.+588    	; 0x310 <main>
  c4:	c5 c4       	rjmp	.+2442   	; 0xa50 <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <putch>:
#include <avr/interrupt.h>
#include <util/delay.h>

void putch(unsigned char data)
{
	while((UCSR0A & 0x20) == 0);
  c8:	5d 9b       	sbis	0x0b, 5	; 11
  ca:	fe cf       	rjmp	.-4      	; 0xc8 <putch>
	
	UDR0 = data;
  cc:	8c b9       	out	0x0c, r24	; 12
	UCSR0A |= 0x20;
  ce:	5d 9a       	sbi	0x0b, 5	; 11
  d0:	08 95       	ret

000000d2 <putch_str>:
}

void putch_str(char *str)
{
  d2:	0f 93       	push	r16
  d4:	1f 93       	push	r17
  d6:	cf 93       	push	r28
  d8:	fc 01       	movw	r30, r24
	unsigned char i = 0;
	while(str[i] != '\0')
  da:	80 81       	ld	r24, Z
  dc:	88 23       	and	r24, r24
  de:	51 f0       	breq	.+20     	; 0xf4 <putch_str+0x22>
  e0:	8f 01       	movw	r16, r30
  e2:	c0 e0       	ldi	r28, 0x00	; 0
		putch(str[i++]);
  e4:	cf 5f       	subi	r28, 0xFF	; 255
  e6:	f0 df       	rcall	.-32     	; 0xc8 <putch>
}

void putch_str(char *str)
{
	unsigned char i = 0;
	while(str[i] != '\0')
  e8:	f8 01       	movw	r30, r16
  ea:	ec 0f       	add	r30, r28
  ec:	f1 1d       	adc	r31, r1
  ee:	80 81       	ld	r24, Z
  f0:	81 11       	cpse	r24, r1
  f2:	f8 cf       	rjmp	.-16     	; 0xe4 <putch_str+0x12>
		putch(str[i++]);
}
  f4:	cf 91       	pop	r28
  f6:	1f 91       	pop	r17
  f8:	0f 91       	pop	r16
  fa:	08 95       	ret

000000fc <getch>:

unsigned char getch()
{
	unsigned char data;
	while((UCSR0A & 0x80)==0);
  fc:	5f 9b       	sbis	0x0b, 7	; 11
  fe:	fe cf       	rjmp	.-4      	; 0xfc <getch>
	data = UDR0;
 100:	8c b1       	in	r24, 0x0c	; 12
	UCSR0A |= 0x80;
 102:	5f 9a       	sbi	0x0b, 7	; 11
	return data;
}
 104:	08 95       	ret

00000106 <__vector_1>:
		}

	}
}
SIGNAL(INT0_vect)
{
 106:	1f 92       	push	r1
 108:	0f 92       	push	r0
 10a:	0f b6       	in	r0, 0x3f	; 63
 10c:	0f 92       	push	r0
 10e:	11 24       	eor	r1, r1
 110:	0b b6       	in	r0, 0x3b	; 59
 112:	0f 92       	push	r0
 114:	2f 93       	push	r18
 116:	3f 93       	push	r19
 118:	4f 93       	push	r20
 11a:	5f 93       	push	r21
 11c:	6f 93       	push	r22
 11e:	7f 93       	push	r23
 120:	8f 93       	push	r24
 122:	9f 93       	push	r25
 124:	af 93       	push	r26
 126:	bf 93       	push	r27
 128:	cf 93       	push	r28
 12a:	ef 93       	push	r30
 12c:	ff 93       	push	r31
	cli();
 12e:	f8 94       	cli
	unsigned char i = 0;
	flag=0;
 130:	10 92 7e 01 	sts	0x017E, r1	; 0x80017e <flag>
	while(text[i] != '\0')
 134:	80 91 22 01 	lds	r24, 0x0122	; 0x800122 <text>
 138:	88 23       	and	r24, r24
 13a:	51 f0       	breq	.+20     	; 0x150 <__vector_1+0x4a>
 13c:	c0 e0       	ldi	r28, 0x00	; 0
	{
		putch(text[i++]);
 13e:	cf 5f       	subi	r28, 0xFF	; 255
 140:	c3 df       	rcall	.-122    	; 0xc8 <putch>
SIGNAL(INT0_vect)
{
	cli();
	unsigned char i = 0;
	flag=0;
	while(text[i] != '\0')
 142:	ec 2f       	mov	r30, r28
 144:	f0 e0       	ldi	r31, 0x00	; 0
 146:	ee 5d       	subi	r30, 0xDE	; 222
 148:	fe 4f       	sbci	r31, 0xFE	; 254
 14a:	80 81       	ld	r24, Z
 14c:	81 11       	cpse	r24, r1
 14e:	f7 cf       	rjmp	.-18     	; 0x13e <__vector_1+0x38>
	{
		putch(text[i++]);
	}
	sei();
 150:	78 94       	sei
}
 152:	ff 91       	pop	r31
 154:	ef 91       	pop	r30
 156:	cf 91       	pop	r28
 158:	bf 91       	pop	r27
 15a:	af 91       	pop	r26
 15c:	9f 91       	pop	r25
 15e:	8f 91       	pop	r24
 160:	7f 91       	pop	r23
 162:	6f 91       	pop	r22
 164:	5f 91       	pop	r21
 166:	4f 91       	pop	r20
 168:	3f 91       	pop	r19
 16a:	2f 91       	pop	r18
 16c:	0f 90       	pop	r0
 16e:	0b be       	out	0x3b, r0	; 59
 170:	0f 90       	pop	r0
 172:	0f be       	out	0x3f, r0	; 63
 174:	0f 90       	pop	r0
 176:	1f 90       	pop	r1
 178:	18 95       	reti

0000017a <piano>:

void piano(unsigned char x)
{
	scale = x;
 17a:	80 93 7a 01 	sts	0x017A, r24	; 0x80017a <__data_end>
	ICR3 = 7273800/Do[scale-0x31]/30;
 17e:	e8 2f       	mov	r30, r24
 180:	f0 e0       	ldi	r31, 0x00	; 0
 182:	ee 0f       	add	r30, r30
 184:	ff 1f       	adc	r31, r31
 186:	e2 56       	subi	r30, 0x62	; 98
 188:	ff 4f       	sbci	r31, 0xFF	; 255
 18a:	20 81       	ld	r18, Z
 18c:	31 81       	ldd	r19, Z+1	; 0x01
 18e:	40 e0       	ldi	r20, 0x00	; 0
 190:	50 e0       	ldi	r21, 0x00	; 0
 192:	6c e1       	ldi	r22, 0x1C	; 28
 194:	73 eb       	ldi	r23, 0xB3	; 179
 196:	83 e0       	ldi	r24, 0x03	; 3
 198:	90 e0       	ldi	r25, 0x00	; 0
 19a:	41 d1       	rcall	.+642    	; 0x41e <__divmodsi4>
 19c:	30 93 81 00 	sts	0x0081, r19	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
 1a0:	20 93 80 00 	sts	0x0080, r18	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
	TCCR3A = 0x40;
 1a4:	eb e8       	ldi	r30, 0x8B	; 139
 1a6:	f0 e0       	ldi	r31, 0x00	; 0
 1a8:	80 e4       	ldi	r24, 0x40	; 64
 1aa:	80 83       	st	Z, r24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 1ac:	2f ef       	ldi	r18, 0xFF	; 255
 1ae:	8f e7       	ldi	r24, 0x7F	; 127
 1b0:	94 e0       	ldi	r25, 0x04	; 4
 1b2:	21 50       	subi	r18, 0x01	; 1
 1b4:	80 40       	sbci	r24, 0x00	; 0
 1b6:	90 40       	sbci	r25, 0x00	; 0
 1b8:	e1 f7       	brne	.-8      	; 0x1b2 <piano+0x38>
 1ba:	00 c0       	rjmp	.+0      	; 0x1bc <piano+0x42>
 1bc:	00 00       	nop
	_delay_ms(200);
	TCCR3A = 0x00;
 1be:	10 82       	st	Z, r1
 1c0:	08 95       	ret

000001c2 <cds>:
}


void cds()
{
 1c2:	cf 93       	push	r28
	unsigned char addata = 0;
	unsigned char data[5];
	unsigned char i = 0;
	
	ADCSRA |= 0x40;
 1c4:	36 9a       	sbi	0x06, 6	; 6
	while((ADCSRA&0x01) == 0x00);
 1c6:	30 9b       	sbis	0x06, 0	; 6
 1c8:	fe cf       	rjmp	.-4      	; 0x1c6 <cds+0x4>
	addata = ADC;
 1ca:	84 b1       	in	r24, 0x04	; 4
 1cc:	95 b1       	in	r25, 0x05	; 5
	sprintf(str,"%d",ADC);
 1ce:	84 b1       	in	r24, 0x04	; 4
 1d0:	95 b1       	in	r25, 0x05	; 5
 1d2:	9f 93       	push	r25
 1d4:	8f 93       	push	r24
 1d6:	86 e7       	ldi	r24, 0x76	; 118
 1d8:	91 e0       	ldi	r25, 0x01	; 1
 1da:	9f 93       	push	r25
 1dc:	8f 93       	push	r24
 1de:	80 e8       	ldi	r24, 0x80	; 128
 1e0:	91 e0       	ldi	r25, 0x01	; 1
 1e2:	9f 93       	push	r25
 1e4:	8f 93       	push	r24
 1e6:	59 d1       	rcall	.+690    	; 0x49a <sprintf>
	//
	//while(str[i] != '\0')
	//{
		//putch(str[i++]);
	//}
	while(cds_text[i] != '\0')
 1e8:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <cds_text>
 1ec:	0f 90       	pop	r0
 1ee:	0f 90       	pop	r0
 1f0:	0f 90       	pop	r0
 1f2:	0f 90       	pop	r0
 1f4:	0f 90       	pop	r0
 1f6:	0f 90       	pop	r0
 1f8:	88 23       	and	r24, r24
 1fa:	51 f0       	breq	.+20     	; 0x210 <cds+0x4e>
 1fc:	c0 e0       	ldi	r28, 0x00	; 0
	{
		putch(cds_text[i++]);
 1fe:	cf 5f       	subi	r28, 0xFF	; 255
 200:	63 df       	rcall	.-314    	; 0xc8 <putch>
	//
	//while(str[i] != '\0')
	//{
		//putch(str[i++]);
	//}
	while(cds_text[i] != '\0')
 202:	ec 2f       	mov	r30, r28
 204:	f0 e0       	ldi	r31, 0x00	; 0
 206:	ec 5e       	subi	r30, 0xEC	; 236
 208:	fe 4f       	sbci	r31, 0xFE	; 254
 20a:	80 81       	ld	r24, Z
 20c:	81 11       	cpse	r24, r1
 20e:	f7 cf       	rjmp	.-18     	; 0x1fe <cds+0x3c>
	{
		putch(cds_text[i++]);
	}
	putch_str(str);
 210:	80 e8       	ldi	r24, 0x80	; 128
 212:	91 e0       	ldi	r25, 0x01	; 1
 214:	5e df       	rcall	.-324    	; 0xd2 <putch_str>
 216:	2f ef       	ldi	r18, 0xFF	; 255
 218:	8f ef       	ldi	r24, 0xFF	; 255
 21a:	9c e2       	ldi	r25, 0x2C	; 44
 21c:	21 50       	subi	r18, 0x01	; 1
 21e:	80 40       	sbci	r24, 0x00	; 0
 220:	90 40       	sbci	r25, 0x00	; 0
 222:	e1 f7       	brne	.-8      	; 0x21c <cds+0x5a>
 224:	00 c0       	rjmp	.+0      	; 0x226 <cds+0x64>
 226:	00 00       	nop
	_delay_ms(2000);
}
 228:	cf 91       	pop	r28
 22a:	08 95       	ret

0000022c <led>:
void led()
{
 22c:	87 e0       	ldi	r24, 0x07	; 7
 22e:	90 e0       	ldi	r25, 0x00	; 0
	
	unsigned char led_data = 0x01;
 230:	31 e0       	ldi	r19, 0x01	; 1

	for(int i=0;i<7;i++)
	{
		if(flag==1){
 232:	20 91 7e 01 	lds	r18, 0x017E	; 0x80017e <flag>
 236:	21 30       	cpi	r18, 0x01	; 1
 238:	59 f4       	brne	.+22     	; 0x250 <led+0x24>
		PORTA = led_data;
 23a:	3b bb       	out	0x1b, r19	; 27
		led_data <<= 1;
 23c:	33 0f       	add	r19, r19
 23e:	2f ef       	ldi	r18, 0xFF	; 255
 240:	4f e3       	ldi	r20, 0x3F	; 63
 242:	52 e0       	ldi	r21, 0x02	; 2
 244:	21 50       	subi	r18, 0x01	; 1
 246:	40 40       	sbci	r20, 0x00	; 0
 248:	50 40       	sbci	r21, 0x00	; 0
 24a:	e1 f7       	brne	.-8      	; 0x244 <led+0x18>
 24c:	00 c0       	rjmp	.+0      	; 0x24e <led+0x22>
 24e:	00 00       	nop
 250:	01 97       	sbiw	r24, 0x01	; 1
void led()
{
	
	unsigned char led_data = 0x01;

	for(int i=0;i<7;i++)
 252:	79 f7       	brne	.-34     	; 0x232 <led+0x6>
 254:	87 e0       	ldi	r24, 0x07	; 7
 256:	90 e0       	ldi	r25, 0x00	; 0
		_delay_ms(100);
		}
	}
	for(int j=0;j<7;j++)
	{
		if(flag==1){
 258:	20 91 7e 01 	lds	r18, 0x017E	; 0x80017e <flag>
 25c:	21 30       	cpi	r18, 0x01	; 1
 25e:	59 f4       	brne	.+22     	; 0x276 <led+0x4a>
		PORTA = led_data;
 260:	3b bb       	out	0x1b, r19	; 27
		led_data >>= 1;
 262:	36 95       	lsr	r19
 264:	2f ef       	ldi	r18, 0xFF	; 255
 266:	4f e3       	ldi	r20, 0x3F	; 63
 268:	52 e0       	ldi	r21, 0x02	; 2
 26a:	21 50       	subi	r18, 0x01	; 1
 26c:	40 40       	sbci	r20, 0x00	; 0
 26e:	50 40       	sbci	r21, 0x00	; 0
 270:	e1 f7       	brne	.-8      	; 0x26a <led+0x3e>
 272:	00 c0       	rjmp	.+0      	; 0x274 <led+0x48>
 274:	00 00       	nop
 276:	01 97       	sbiw	r24, 0x01	; 1
		PORTA = led_data;
		led_data <<= 1;
		_delay_ms(100);
		}
	}
	for(int j=0;j<7;j++)
 278:	79 f7       	brne	.-34     	; 0x258 <led+0x2c>
		led_data >>= 1;
		_delay_ms(100);
		}
	}
	
}
 27a:	08 95       	ret

0000027c <step_motor_f>:

void step_motor_f()
{
 27c:	8a e0       	ldi	r24, 0x0A	; 10
 27e:	90 e0       	ldi	r25, 0x00	; 0
		for(int i=0;i<10;i++)
		{
		PORTD = 0x10;
 280:	50 e1       	ldi	r21, 0x10	; 16
		_delay_ms(10);
		PORTD = 0x20;
 282:	40 e2       	ldi	r20, 0x20	; 32
		_delay_ms(10);
		PORTD = 0x40;
 284:	30 e4       	ldi	r19, 0x40	; 64
		_delay_ms(10);
		PORTD = 0x80;
 286:	20 e8       	ldi	r18, 0x80	; 128

void step_motor_f()
{
		for(int i=0;i<10;i++)
		{
		PORTD = 0x10;
 288:	52 bb       	out	0x12, r21	; 18
 28a:	ef ef       	ldi	r30, 0xFF	; 255
 28c:	f7 e4       	ldi	r31, 0x47	; 71
 28e:	31 97       	sbiw	r30, 0x01	; 1
 290:	f1 f7       	brne	.-4      	; 0x28e <step_motor_f+0x12>
 292:	00 c0       	rjmp	.+0      	; 0x294 <step_motor_f+0x18>
 294:	00 00       	nop
		_delay_ms(10);
		PORTD = 0x20;
 296:	42 bb       	out	0x12, r20	; 18
 298:	ef ef       	ldi	r30, 0xFF	; 255
 29a:	f7 e4       	ldi	r31, 0x47	; 71
 29c:	31 97       	sbiw	r30, 0x01	; 1
 29e:	f1 f7       	brne	.-4      	; 0x29c <step_motor_f+0x20>
 2a0:	00 c0       	rjmp	.+0      	; 0x2a2 <step_motor_f+0x26>
 2a2:	00 00       	nop
		_delay_ms(10);
		PORTD = 0x40;
 2a4:	32 bb       	out	0x12, r19	; 18
 2a6:	ef ef       	ldi	r30, 0xFF	; 255
 2a8:	f7 e4       	ldi	r31, 0x47	; 71
 2aa:	31 97       	sbiw	r30, 0x01	; 1
 2ac:	f1 f7       	brne	.-4      	; 0x2aa <step_motor_f+0x2e>
 2ae:	00 c0       	rjmp	.+0      	; 0x2b0 <step_motor_f+0x34>
 2b0:	00 00       	nop
		_delay_ms(10);
		PORTD = 0x80;
 2b2:	22 bb       	out	0x12, r18	; 18
 2b4:	ef ef       	ldi	r30, 0xFF	; 255
 2b6:	f7 e4       	ldi	r31, 0x47	; 71
 2b8:	31 97       	sbiw	r30, 0x01	; 1
 2ba:	f1 f7       	brne	.-4      	; 0x2b8 <step_motor_f+0x3c>
 2bc:	00 c0       	rjmp	.+0      	; 0x2be <step_motor_f+0x42>
 2be:	00 00       	nop
 2c0:	01 97       	sbiw	r24, 0x01	; 1
	
}

void step_motor_f()
{
		for(int i=0;i<10;i++)
 2c2:	11 f7       	brne	.-60     	; 0x288 <step_motor_f+0xc>
		PORTD = 0x40;
		_delay_ms(10);
		PORTD = 0x80;
		_delay_ms(10);
		}
}
 2c4:	08 95       	ret

000002c6 <step_motor_r>:
void step_motor_r()
{
 2c6:	8a e0       	ldi	r24, 0x0A	; 10
 2c8:	90 e0       	ldi	r25, 0x00	; 0
		for(int i = 0; i<10; i++)
		{
		PORTD = 0x80;
 2ca:	50 e8       	ldi	r21, 0x80	; 128
		_delay_ms(10);
		PORTD = 0x40;
 2cc:	40 e4       	ldi	r20, 0x40	; 64
		_delay_ms(10);
		PORTD = 0x20;
 2ce:	30 e2       	ldi	r19, 0x20	; 32
		_delay_ms(10);
		PORTD = 0x10;
 2d0:	20 e1       	ldi	r18, 0x10	; 16
}
void step_motor_r()
{
		for(int i = 0; i<10; i++)
		{
		PORTD = 0x80;
 2d2:	52 bb       	out	0x12, r21	; 18
 2d4:	ef ef       	ldi	r30, 0xFF	; 255
 2d6:	f7 e4       	ldi	r31, 0x47	; 71
 2d8:	31 97       	sbiw	r30, 0x01	; 1
 2da:	f1 f7       	brne	.-4      	; 0x2d8 <step_motor_r+0x12>
 2dc:	00 c0       	rjmp	.+0      	; 0x2de <step_motor_r+0x18>
 2de:	00 00       	nop
		_delay_ms(10);
		PORTD = 0x40;
 2e0:	42 bb       	out	0x12, r20	; 18
 2e2:	ef ef       	ldi	r30, 0xFF	; 255
 2e4:	f7 e4       	ldi	r31, 0x47	; 71
 2e6:	31 97       	sbiw	r30, 0x01	; 1
 2e8:	f1 f7       	brne	.-4      	; 0x2e6 <step_motor_r+0x20>
 2ea:	00 c0       	rjmp	.+0      	; 0x2ec <step_motor_r+0x26>
 2ec:	00 00       	nop
		_delay_ms(10);
		PORTD = 0x20;
 2ee:	32 bb       	out	0x12, r19	; 18
 2f0:	ef ef       	ldi	r30, 0xFF	; 255
 2f2:	f7 e4       	ldi	r31, 0x47	; 71
 2f4:	31 97       	sbiw	r30, 0x01	; 1
 2f6:	f1 f7       	brne	.-4      	; 0x2f4 <step_motor_r+0x2e>
 2f8:	00 c0       	rjmp	.+0      	; 0x2fa <step_motor_r+0x34>
 2fa:	00 00       	nop
		_delay_ms(10);
		PORTD = 0x10;
 2fc:	22 bb       	out	0x12, r18	; 18
 2fe:	ef ef       	ldi	r30, 0xFF	; 255
 300:	f7 e4       	ldi	r31, 0x47	; 71
 302:	31 97       	sbiw	r30, 0x01	; 1
 304:	f1 f7       	brne	.-4      	; 0x302 <step_motor_r+0x3c>
 306:	00 c0       	rjmp	.+0      	; 0x308 <step_motor_r+0x42>
 308:	00 00       	nop
 30a:	01 97       	sbiw	r24, 0x01	; 1
		_delay_ms(10);
		}
}
void step_motor_r()
{
		for(int i = 0; i<10; i++)
 30c:	11 f7       	brne	.-60     	; 0x2d2 <step_motor_r+0xc>
		PORTD = 0x20;
		_delay_ms(10);
		PORTD = 0x10;
		_delay_ms(10);
		}
 30e:	08 95       	ret

00000310 <main>:
int main(void)
{
	unsigned char i,j = 0;
	
		
	TCCR3A |= 0x00;
 310:	eb e8       	ldi	r30, 0x8B	; 139
 312:	f0 e0       	ldi	r31, 0x00	; 0
 314:	80 81       	ld	r24, Z
 316:	80 83       	st	Z, r24
	TCCR3B |= 0x19;
 318:	ea e8       	ldi	r30, 0x8A	; 138
 31a:	f0 e0       	ldi	r31, 0x00	; 0
 31c:	80 81       	ld	r24, Z
 31e:	89 61       	ori	r24, 0x19	; 25
 320:	80 83       	st	Z, r24
	TCCR3C = 0x00;
 322:	10 92 8c 00 	sts	0x008C, r1	; 0x80008c <__TEXT_REGION_LENGTH__+0x7e008c>
	TCNT3 = 0x0000;
 326:	10 92 89 00 	sts	0x0089, r1	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 32a:	10 92 88 00 	sts	0x0088, r1	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
	
	DDRE = 0x08;
 32e:	88 e0       	ldi	r24, 0x08	; 8
 330:	82 b9       	out	0x02, r24	; 2
	
	DDRF = 0x03;
 332:	83 e0       	ldi	r24, 0x03	; 3
 334:	80 93 61 00 	sts	0x0061, r24	; 0x800061 <__TEXT_REGION_LENGTH__+0x7e0061>
	PORTF = 0x03;
 338:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <__TEXT_REGION_LENGTH__+0x7e0062>
	
	DDRE = 0x04;
 33c:	94 e0       	ldi	r25, 0x04	; 4
 33e:	92 b9       	out	0x02, r25	; 2
	PORTE = 0x04;
 340:	93 b9       	out	0x03, r25	; 3

	ADMUX = 0x00;
 342:	17 b8       	out	0x07, r1	; 7
	ADCSRA = 0x87;
 344:	97 e8       	ldi	r25, 0x87	; 135
 346:	96 b9       	out	0x06, r25	; 6
	
	DDRB = 0x20;
 348:	90 e2       	ldi	r25, 0x20	; 32
 34a:	97 bb       	out	0x17, r25	; 23
	DDRD = 0XF0;
 34c:	90 ef       	ldi	r25, 0xF0	; 240
 34e:	91 bb       	out	0x11, r25	; 17
	PORTB &= ~0x20;
 350:	c5 98       	cbi	0x18, 5	; 24
	
	EICRA = 0x03;
 352:	80 93 6a 00 	sts	0x006A, r24	; 0x80006a <__TEXT_REGION_LENGTH__+0x7e006a>
	EIMSK = 0x01;
 356:	91 e0       	ldi	r25, 0x01	; 1
 358:	99 bf       	out	0x39, r25	; 57
	EIFR = 0x01;
 35a:	98 bf       	out	0x38, r25	; 56
	sei();
 35c:	78 94       	sei

	
	DDRE = 0xfe;
 35e:	9e ef       	ldi	r25, 0xFE	; 254
 360:	92 b9       	out	0x02, r25	; 2
	DDRA = 0xFF;
 362:	9f ef       	ldi	r25, 0xFF	; 255
 364:	9a bb       	out	0x1a, r25	; 26
	
	UCSR0A = 0x00;
 366:	1b b8       	out	0x0b, r1	; 11
	UCSR0B = 0x18;
 368:	98 e1       	ldi	r25, 0x18	; 24
 36a:	9a b9       	out	0x0a, r25	; 10
	UCSR0C = 0x06;
 36c:	96 e0       	ldi	r25, 0x06	; 6
 36e:	90 93 95 00 	sts	0x0095, r25	; 0x800095 <__TEXT_REGION_LENGTH__+0x7e0095>
	
	UBRR0H = 0x00;
 372:	10 92 90 00 	sts	0x0090, r1	; 0x800090 <__TEXT_REGION_LENGTH__+0x7e0090>
	UBRR0L = 0x03;
 376:	89 b9       	out	0x09, r24	; 9
	
	while(text[i] != '\0')
 378:	c0 e0       	ldi	r28, 0x00	; 0
 37a:	80 91 22 01 	lds	r24, 0x0122	; 0x800122 <text>
 37e:	88 23       	and	r24, r24
 380:	49 f0       	breq	.+18     	; 0x394 <main+0x84>
	{
		putch(text[i++]);
 382:	cf 5f       	subi	r28, 0xFF	; 255
 384:	a1 de       	rcall	.-702    	; 0xc8 <putch>
	UCSR0C = 0x06;
	
	UBRR0H = 0x00;
	UBRR0L = 0x03;
	
	while(text[i] != '\0')
 386:	ec 2f       	mov	r30, r28
 388:	f0 e0       	ldi	r31, 0x00	; 0
 38a:	ee 5d       	subi	r30, 0xDE	; 222
 38c:	fe 4f       	sbci	r31, 0xFE	; 254
 38e:	80 81       	ld	r24, Z
 390:	81 11       	cpse	r24, r1
 392:	f7 cf       	rjmp	.-18     	; 0x382 <main+0x72>
		putch(text[i++]);
	}

	while(1)
	{
		cnt[0] = getch();
 394:	cb e7       	ldi	r28, 0x7B	; 123
 396:	d1 e0       	ldi	r29, 0x01	; 1
 398:	11 e0       	ldi	r17, 0x01	; 1
 39a:	b0 de       	rcall	.-672    	; 0xfc <getch>
		putch(cnt[0]);
 39c:	88 83       	st	Y, r24
 39e:	94 de       	rcall	.-728    	; 0xc8 <putch>
		
		
		if(cnt[0] == 'l'||cnt[0] == 'L')
 3a0:	88 81       	ld	r24, Y
 3a2:	8c 36       	cpi	r24, 0x6C	; 108
 3a4:	99 f1       	breq	.+102    	; 0x40c <__LOCK_REGION_LENGTH__+0xc>
 3a6:	8c 34       	cpi	r24, 0x4C	; 76
		{
			flag=1;
 3a8:	41 f4       	brne	.+16     	; 0x3ba <main+0xaa>
 3aa:	10 93 7e 01 	sts	0x017E, r17	; 0x80017e <flag>
			while(flag)
			{
				led();
 3ae:	3e df       	rcall	.-388    	; 0x22c <led>
		
		
		if(cnt[0] == 'l'||cnt[0] == 'L')
		{
			flag=1;
			while(flag)
 3b0:	80 91 7e 01 	lds	r24, 0x017E	; 0x80017e <flag>
 3b4:	81 11       	cpse	r24, r1
 3b6:	fb cf       	rjmp	.-10     	; 0x3ae <main+0x9e>
			{
				led();
			}
			
			cnt[0],cnt[1] ='\0';
 3b8:	19 82       	std	Y+1, r1	; 0x01
		}
		
		if(cnt[0] == 'f'||cnt[0] == 'r')
 3ba:	88 81       	ld	r24, Y
 3bc:	86 36       	cpi	r24, 0x66	; 102
 3be:	11 f0       	breq	.+4      	; 0x3c4 <main+0xb4>
 3c0:	82 37       	cpi	r24, 0x72	; 114
 3c2:	79 f4       	brne	.+30     	; 0x3e2 <main+0xd2>
		{
			flag=1;
 3c4:	10 93 7e 01 	sts	0x017E, r17	; 0x80017e <flag>
			while(flag)
			{
				if(cnt[0] == 'f')
 3c8:	08 c0       	rjmp	.+16     	; 0x3da <main+0xca>
 3ca:	88 81       	ld	r24, Y
 3cc:	86 36       	cpi	r24, 0x66	; 102
				{
					step_motor_f();
 3ce:	09 f4       	brne	.+2      	; 0x3d2 <main+0xc2>
				}
				if(cnt[0] == 'r')
 3d0:	55 df       	rcall	.-342    	; 0x27c <step_motor_f>
 3d2:	88 81       	ld	r24, Y
 3d4:	82 37       	cpi	r24, 0x72	; 114
				{
					step_motor_r();
 3d6:	09 f4       	brne	.+2      	; 0x3da <main+0xca>
 3d8:	76 df       	rcall	.-276    	; 0x2c6 <step_motor_r>
		}
		
		if(cnt[0] == 'f'||cnt[0] == 'r')
		{
			flag=1;
			while(flag)
 3da:	80 91 7e 01 	lds	r24, 0x017E	; 0x80017e <flag>
 3de:	81 11       	cpse	r24, r1
 3e0:	f4 cf       	rjmp	.-24     	; 0x3ca <main+0xba>
				{
					step_motor_r();
				}
			}
		}
		if(cnt[0] == 'c' || cnt[0] == 'C')
 3e2:	88 81       	ld	r24, Y
 3e4:	83 36       	cpi	r24, 0x63	; 99
 3e6:	a9 f0       	breq	.+42     	; 0x412 <__LOCK_REGION_LENGTH__+0x12>
 3e8:	83 34       	cpi	r24, 0x43	; 67
 3ea:	31 f4       	brne	.+12     	; 0x3f8 <main+0xe8>
		{
			flag=1;
			while(flag)
			{
				cds();
 3ec:	15 c0       	rjmp	.+42     	; 0x418 <__LOCK_REGION_LENGTH__+0x18>
 3ee:	e9 de       	rcall	.-558    	; 0x1c2 <cds>
			}
		}
		if(cnt[0] == 'c' || cnt[0] == 'C')
		{
			flag=1;
			while(flag)
 3f0:	80 91 7e 01 	lds	r24, 0x017E	; 0x80017e <flag>
 3f4:	81 11       	cpse	r24, r1
 3f6:	fb cf       	rjmp	.-10     	; 0x3ee <main+0xde>
			{
				cds();
			}
		}
		if((cnt[0]-0x31 >=0 && cnt[0]-0x31 <= 9))
 3f8:	88 81       	ld	r24, Y
 3fa:	90 e0       	ldi	r25, 0x00	; 0
 3fc:	9c 01       	movw	r18, r24
 3fe:	21 53       	subi	r18, 0x31	; 49
 400:	31 09       	sbc	r19, r1
 402:	2a 30       	cpi	r18, 0x0A	; 10
 404:	31 05       	cpc	r19, r1
		{
			piano(cnt[0]);	
 406:	48 f6       	brcc	.-110    	; 0x39a <main+0x8a>
 408:	b8 de       	rcall	.-656    	; 0x17a <piano>
 40a:	c7 cf       	rjmp	.-114    	; 0x39a <main+0x8a>
		putch(cnt[0]);
		
		
		if(cnt[0] == 'l'||cnt[0] == 'L')
		{
			flag=1;
 40c:	10 93 7e 01 	sts	0x017E, r17	; 0x80017e <flag>
 410:	ce cf       	rjmp	.-100    	; 0x3ae <main+0x9e>
				}
			}
		}
		if(cnt[0] == 'c' || cnt[0] == 'C')
		{
			flag=1;
 412:	10 93 7e 01 	sts	0x017E, r17	; 0x80017e <flag>
 416:	eb cf       	rjmp	.-42     	; 0x3ee <main+0xde>
 418:	10 93 7e 01 	sts	0x017E, r17	; 0x80017e <flag>
 41c:	e8 cf       	rjmp	.-48     	; 0x3ee <main+0xde>

0000041e <__divmodsi4>:
 41e:	05 2e       	mov	r0, r21
 420:	97 fb       	bst	r25, 7
 422:	16 f4       	brtc	.+4      	; 0x428 <__divmodsi4+0xa>
 424:	00 94       	com	r0
 426:	0f d0       	rcall	.+30     	; 0x446 <__negsi2>
 428:	57 fd       	sbrc	r21, 7
 42a:	05 d0       	rcall	.+10     	; 0x436 <__divmodsi4_neg2>
 42c:	14 d0       	rcall	.+40     	; 0x456 <__udivmodsi4>
 42e:	07 fc       	sbrc	r0, 7
 430:	02 d0       	rcall	.+4      	; 0x436 <__divmodsi4_neg2>
 432:	46 f4       	brtc	.+16     	; 0x444 <__divmodsi4_exit>
 434:	08 c0       	rjmp	.+16     	; 0x446 <__negsi2>

00000436 <__divmodsi4_neg2>:
 436:	50 95       	com	r21
 438:	40 95       	com	r20
 43a:	30 95       	com	r19
 43c:	21 95       	neg	r18
 43e:	3f 4f       	sbci	r19, 0xFF	; 255
 440:	4f 4f       	sbci	r20, 0xFF	; 255
 442:	5f 4f       	sbci	r21, 0xFF	; 255

00000444 <__divmodsi4_exit>:
 444:	08 95       	ret

00000446 <__negsi2>:
 446:	90 95       	com	r25
 448:	80 95       	com	r24
 44a:	70 95       	com	r23
 44c:	61 95       	neg	r22
 44e:	7f 4f       	sbci	r23, 0xFF	; 255
 450:	8f 4f       	sbci	r24, 0xFF	; 255
 452:	9f 4f       	sbci	r25, 0xFF	; 255
 454:	08 95       	ret

00000456 <__udivmodsi4>:
 456:	a1 e2       	ldi	r26, 0x21	; 33
 458:	1a 2e       	mov	r1, r26
 45a:	aa 1b       	sub	r26, r26
 45c:	bb 1b       	sub	r27, r27
 45e:	fd 01       	movw	r30, r26
 460:	0d c0       	rjmp	.+26     	; 0x47c <__udivmodsi4_ep>

00000462 <__udivmodsi4_loop>:
 462:	aa 1f       	adc	r26, r26
 464:	bb 1f       	adc	r27, r27
 466:	ee 1f       	adc	r30, r30
 468:	ff 1f       	adc	r31, r31
 46a:	a2 17       	cp	r26, r18
 46c:	b3 07       	cpc	r27, r19
 46e:	e4 07       	cpc	r30, r20
 470:	f5 07       	cpc	r31, r21
 472:	20 f0       	brcs	.+8      	; 0x47c <__udivmodsi4_ep>
 474:	a2 1b       	sub	r26, r18
 476:	b3 0b       	sbc	r27, r19
 478:	e4 0b       	sbc	r30, r20
 47a:	f5 0b       	sbc	r31, r21

0000047c <__udivmodsi4_ep>:
 47c:	66 1f       	adc	r22, r22
 47e:	77 1f       	adc	r23, r23
 480:	88 1f       	adc	r24, r24
 482:	99 1f       	adc	r25, r25
 484:	1a 94       	dec	r1
 486:	69 f7       	brne	.-38     	; 0x462 <__udivmodsi4_loop>
 488:	60 95       	com	r22
 48a:	70 95       	com	r23
 48c:	80 95       	com	r24
 48e:	90 95       	com	r25
 490:	9b 01       	movw	r18, r22
 492:	ac 01       	movw	r20, r24
 494:	bd 01       	movw	r22, r26
 496:	cf 01       	movw	r24, r30
 498:	08 95       	ret

0000049a <sprintf>:
 49a:	0f 93       	push	r16
 49c:	1f 93       	push	r17
 49e:	cf 93       	push	r28
 4a0:	df 93       	push	r29
 4a2:	cd b7       	in	r28, 0x3d	; 61
 4a4:	de b7       	in	r29, 0x3e	; 62
 4a6:	2e 97       	sbiw	r28, 0x0e	; 14
 4a8:	0f b6       	in	r0, 0x3f	; 63
 4aa:	f8 94       	cli
 4ac:	de bf       	out	0x3e, r29	; 62
 4ae:	0f be       	out	0x3f, r0	; 63
 4b0:	cd bf       	out	0x3d, r28	; 61
 4b2:	0d 89       	ldd	r16, Y+21	; 0x15
 4b4:	1e 89       	ldd	r17, Y+22	; 0x16
 4b6:	86 e0       	ldi	r24, 0x06	; 6
 4b8:	8c 83       	std	Y+4, r24	; 0x04
 4ba:	1a 83       	std	Y+2, r17	; 0x02
 4bc:	09 83       	std	Y+1, r16	; 0x01
 4be:	8f ef       	ldi	r24, 0xFF	; 255
 4c0:	9f e7       	ldi	r25, 0x7F	; 127
 4c2:	9e 83       	std	Y+6, r25	; 0x06
 4c4:	8d 83       	std	Y+5, r24	; 0x05
 4c6:	ae 01       	movw	r20, r28
 4c8:	47 5e       	subi	r20, 0xE7	; 231
 4ca:	5f 4f       	sbci	r21, 0xFF	; 255
 4cc:	6f 89       	ldd	r22, Y+23	; 0x17
 4ce:	78 8d       	ldd	r23, Y+24	; 0x18
 4d0:	ce 01       	movw	r24, r28
 4d2:	01 96       	adiw	r24, 0x01	; 1
 4d4:	10 d0       	rcall	.+32     	; 0x4f6 <vfprintf>
 4d6:	ef 81       	ldd	r30, Y+7	; 0x07
 4d8:	f8 85       	ldd	r31, Y+8	; 0x08
 4da:	e0 0f       	add	r30, r16
 4dc:	f1 1f       	adc	r31, r17
 4de:	10 82       	st	Z, r1
 4e0:	2e 96       	adiw	r28, 0x0e	; 14
 4e2:	0f b6       	in	r0, 0x3f	; 63
 4e4:	f8 94       	cli
 4e6:	de bf       	out	0x3e, r29	; 62
 4e8:	0f be       	out	0x3f, r0	; 63
 4ea:	cd bf       	out	0x3d, r28	; 61
 4ec:	df 91       	pop	r29
 4ee:	cf 91       	pop	r28
 4f0:	1f 91       	pop	r17
 4f2:	0f 91       	pop	r16
 4f4:	08 95       	ret

000004f6 <vfprintf>:
 4f6:	2f 92       	push	r2
 4f8:	3f 92       	push	r3
 4fa:	4f 92       	push	r4
 4fc:	5f 92       	push	r5
 4fe:	6f 92       	push	r6
 500:	7f 92       	push	r7
 502:	8f 92       	push	r8
 504:	9f 92       	push	r9
 506:	af 92       	push	r10
 508:	bf 92       	push	r11
 50a:	cf 92       	push	r12
 50c:	df 92       	push	r13
 50e:	ef 92       	push	r14
 510:	ff 92       	push	r15
 512:	0f 93       	push	r16
 514:	1f 93       	push	r17
 516:	cf 93       	push	r28
 518:	df 93       	push	r29
 51a:	cd b7       	in	r28, 0x3d	; 61
 51c:	de b7       	in	r29, 0x3e	; 62
 51e:	2b 97       	sbiw	r28, 0x0b	; 11
 520:	0f b6       	in	r0, 0x3f	; 63
 522:	f8 94       	cli
 524:	de bf       	out	0x3e, r29	; 62
 526:	0f be       	out	0x3f, r0	; 63
 528:	cd bf       	out	0x3d, r28	; 61
 52a:	6c 01       	movw	r12, r24
 52c:	7b 01       	movw	r14, r22
 52e:	8a 01       	movw	r16, r20
 530:	fc 01       	movw	r30, r24
 532:	17 82       	std	Z+7, r1	; 0x07
 534:	16 82       	std	Z+6, r1	; 0x06
 536:	83 81       	ldd	r24, Z+3	; 0x03
 538:	81 ff       	sbrs	r24, 1
 53a:	bf c1       	rjmp	.+894    	; 0x8ba <vfprintf+0x3c4>
 53c:	ce 01       	movw	r24, r28
 53e:	01 96       	adiw	r24, 0x01	; 1
 540:	3c 01       	movw	r6, r24
 542:	f6 01       	movw	r30, r12
 544:	93 81       	ldd	r25, Z+3	; 0x03
 546:	f7 01       	movw	r30, r14
 548:	93 fd       	sbrc	r25, 3
 54a:	85 91       	lpm	r24, Z+
 54c:	93 ff       	sbrs	r25, 3
 54e:	81 91       	ld	r24, Z+
 550:	7f 01       	movw	r14, r30
 552:	88 23       	and	r24, r24
 554:	09 f4       	brne	.+2      	; 0x558 <vfprintf+0x62>
 556:	ad c1       	rjmp	.+858    	; 0x8b2 <vfprintf+0x3bc>
 558:	85 32       	cpi	r24, 0x25	; 37
 55a:	39 f4       	brne	.+14     	; 0x56a <vfprintf+0x74>
 55c:	93 fd       	sbrc	r25, 3
 55e:	85 91       	lpm	r24, Z+
 560:	93 ff       	sbrs	r25, 3
 562:	81 91       	ld	r24, Z+
 564:	7f 01       	movw	r14, r30
 566:	85 32       	cpi	r24, 0x25	; 37
 568:	21 f4       	brne	.+8      	; 0x572 <vfprintf+0x7c>
 56a:	b6 01       	movw	r22, r12
 56c:	90 e0       	ldi	r25, 0x00	; 0
 56e:	d6 d1       	rcall	.+940    	; 0x91c <fputc>
 570:	e8 cf       	rjmp	.-48     	; 0x542 <vfprintf+0x4c>
 572:	91 2c       	mov	r9, r1
 574:	21 2c       	mov	r2, r1
 576:	31 2c       	mov	r3, r1
 578:	ff e1       	ldi	r31, 0x1F	; 31
 57a:	f3 15       	cp	r31, r3
 57c:	d8 f0       	brcs	.+54     	; 0x5b4 <vfprintf+0xbe>
 57e:	8b 32       	cpi	r24, 0x2B	; 43
 580:	79 f0       	breq	.+30     	; 0x5a0 <vfprintf+0xaa>
 582:	38 f4       	brcc	.+14     	; 0x592 <vfprintf+0x9c>
 584:	80 32       	cpi	r24, 0x20	; 32
 586:	79 f0       	breq	.+30     	; 0x5a6 <vfprintf+0xb0>
 588:	83 32       	cpi	r24, 0x23	; 35
 58a:	a1 f4       	brne	.+40     	; 0x5b4 <vfprintf+0xbe>
 58c:	23 2d       	mov	r18, r3
 58e:	20 61       	ori	r18, 0x10	; 16
 590:	1d c0       	rjmp	.+58     	; 0x5cc <vfprintf+0xd6>
 592:	8d 32       	cpi	r24, 0x2D	; 45
 594:	61 f0       	breq	.+24     	; 0x5ae <vfprintf+0xb8>
 596:	80 33       	cpi	r24, 0x30	; 48
 598:	69 f4       	brne	.+26     	; 0x5b4 <vfprintf+0xbe>
 59a:	23 2d       	mov	r18, r3
 59c:	21 60       	ori	r18, 0x01	; 1
 59e:	16 c0       	rjmp	.+44     	; 0x5cc <vfprintf+0xd6>
 5a0:	83 2d       	mov	r24, r3
 5a2:	82 60       	ori	r24, 0x02	; 2
 5a4:	38 2e       	mov	r3, r24
 5a6:	e3 2d       	mov	r30, r3
 5a8:	e4 60       	ori	r30, 0x04	; 4
 5aa:	3e 2e       	mov	r3, r30
 5ac:	2a c0       	rjmp	.+84     	; 0x602 <vfprintf+0x10c>
 5ae:	f3 2d       	mov	r31, r3
 5b0:	f8 60       	ori	r31, 0x08	; 8
 5b2:	1d c0       	rjmp	.+58     	; 0x5ee <vfprintf+0xf8>
 5b4:	37 fc       	sbrc	r3, 7
 5b6:	2d c0       	rjmp	.+90     	; 0x612 <vfprintf+0x11c>
 5b8:	20 ed       	ldi	r18, 0xD0	; 208
 5ba:	28 0f       	add	r18, r24
 5bc:	2a 30       	cpi	r18, 0x0A	; 10
 5be:	40 f0       	brcs	.+16     	; 0x5d0 <vfprintf+0xda>
 5c0:	8e 32       	cpi	r24, 0x2E	; 46
 5c2:	b9 f4       	brne	.+46     	; 0x5f2 <vfprintf+0xfc>
 5c4:	36 fc       	sbrc	r3, 6
 5c6:	75 c1       	rjmp	.+746    	; 0x8b2 <vfprintf+0x3bc>
 5c8:	23 2d       	mov	r18, r3
 5ca:	20 64       	ori	r18, 0x40	; 64
 5cc:	32 2e       	mov	r3, r18
 5ce:	19 c0       	rjmp	.+50     	; 0x602 <vfprintf+0x10c>
 5d0:	36 fe       	sbrs	r3, 6
 5d2:	06 c0       	rjmp	.+12     	; 0x5e0 <vfprintf+0xea>
 5d4:	8a e0       	ldi	r24, 0x0A	; 10
 5d6:	98 9e       	mul	r9, r24
 5d8:	20 0d       	add	r18, r0
 5da:	11 24       	eor	r1, r1
 5dc:	92 2e       	mov	r9, r18
 5de:	11 c0       	rjmp	.+34     	; 0x602 <vfprintf+0x10c>
 5e0:	ea e0       	ldi	r30, 0x0A	; 10
 5e2:	2e 9e       	mul	r2, r30
 5e4:	20 0d       	add	r18, r0
 5e6:	11 24       	eor	r1, r1
 5e8:	22 2e       	mov	r2, r18
 5ea:	f3 2d       	mov	r31, r3
 5ec:	f0 62       	ori	r31, 0x20	; 32
 5ee:	3f 2e       	mov	r3, r31
 5f0:	08 c0       	rjmp	.+16     	; 0x602 <vfprintf+0x10c>
 5f2:	8c 36       	cpi	r24, 0x6C	; 108
 5f4:	21 f4       	brne	.+8      	; 0x5fe <vfprintf+0x108>
 5f6:	83 2d       	mov	r24, r3
 5f8:	80 68       	ori	r24, 0x80	; 128
 5fa:	38 2e       	mov	r3, r24
 5fc:	02 c0       	rjmp	.+4      	; 0x602 <vfprintf+0x10c>
 5fe:	88 36       	cpi	r24, 0x68	; 104
 600:	41 f4       	brne	.+16     	; 0x612 <vfprintf+0x11c>
 602:	f7 01       	movw	r30, r14
 604:	93 fd       	sbrc	r25, 3
 606:	85 91       	lpm	r24, Z+
 608:	93 ff       	sbrs	r25, 3
 60a:	81 91       	ld	r24, Z+
 60c:	7f 01       	movw	r14, r30
 60e:	81 11       	cpse	r24, r1
 610:	b3 cf       	rjmp	.-154    	; 0x578 <vfprintf+0x82>
 612:	98 2f       	mov	r25, r24
 614:	9f 7d       	andi	r25, 0xDF	; 223
 616:	95 54       	subi	r25, 0x45	; 69
 618:	93 30       	cpi	r25, 0x03	; 3
 61a:	28 f4       	brcc	.+10     	; 0x626 <vfprintf+0x130>
 61c:	0c 5f       	subi	r16, 0xFC	; 252
 61e:	1f 4f       	sbci	r17, 0xFF	; 255
 620:	9f e3       	ldi	r25, 0x3F	; 63
 622:	99 83       	std	Y+1, r25	; 0x01
 624:	0d c0       	rjmp	.+26     	; 0x640 <vfprintf+0x14a>
 626:	83 36       	cpi	r24, 0x63	; 99
 628:	31 f0       	breq	.+12     	; 0x636 <vfprintf+0x140>
 62a:	83 37       	cpi	r24, 0x73	; 115
 62c:	71 f0       	breq	.+28     	; 0x64a <vfprintf+0x154>
 62e:	83 35       	cpi	r24, 0x53	; 83
 630:	09 f0       	breq	.+2      	; 0x634 <vfprintf+0x13e>
 632:	55 c0       	rjmp	.+170    	; 0x6de <vfprintf+0x1e8>
 634:	20 c0       	rjmp	.+64     	; 0x676 <vfprintf+0x180>
 636:	f8 01       	movw	r30, r16
 638:	80 81       	ld	r24, Z
 63a:	89 83       	std	Y+1, r24	; 0x01
 63c:	0e 5f       	subi	r16, 0xFE	; 254
 63e:	1f 4f       	sbci	r17, 0xFF	; 255
 640:	88 24       	eor	r8, r8
 642:	83 94       	inc	r8
 644:	91 2c       	mov	r9, r1
 646:	53 01       	movw	r10, r6
 648:	12 c0       	rjmp	.+36     	; 0x66e <vfprintf+0x178>
 64a:	28 01       	movw	r4, r16
 64c:	f2 e0       	ldi	r31, 0x02	; 2
 64e:	4f 0e       	add	r4, r31
 650:	51 1c       	adc	r5, r1
 652:	f8 01       	movw	r30, r16
 654:	a0 80       	ld	r10, Z
 656:	b1 80       	ldd	r11, Z+1	; 0x01
 658:	36 fe       	sbrs	r3, 6
 65a:	03 c0       	rjmp	.+6      	; 0x662 <vfprintf+0x16c>
 65c:	69 2d       	mov	r22, r9
 65e:	70 e0       	ldi	r23, 0x00	; 0
 660:	02 c0       	rjmp	.+4      	; 0x666 <vfprintf+0x170>
 662:	6f ef       	ldi	r22, 0xFF	; 255
 664:	7f ef       	ldi	r23, 0xFF	; 255
 666:	c5 01       	movw	r24, r10
 668:	4e d1       	rcall	.+668    	; 0x906 <strnlen>
 66a:	4c 01       	movw	r8, r24
 66c:	82 01       	movw	r16, r4
 66e:	f3 2d       	mov	r31, r3
 670:	ff 77       	andi	r31, 0x7F	; 127
 672:	3f 2e       	mov	r3, r31
 674:	15 c0       	rjmp	.+42     	; 0x6a0 <vfprintf+0x1aa>
 676:	28 01       	movw	r4, r16
 678:	22 e0       	ldi	r18, 0x02	; 2
 67a:	42 0e       	add	r4, r18
 67c:	51 1c       	adc	r5, r1
 67e:	f8 01       	movw	r30, r16
 680:	a0 80       	ld	r10, Z
 682:	b1 80       	ldd	r11, Z+1	; 0x01
 684:	36 fe       	sbrs	r3, 6
 686:	03 c0       	rjmp	.+6      	; 0x68e <vfprintf+0x198>
 688:	69 2d       	mov	r22, r9
 68a:	70 e0       	ldi	r23, 0x00	; 0
 68c:	02 c0       	rjmp	.+4      	; 0x692 <vfprintf+0x19c>
 68e:	6f ef       	ldi	r22, 0xFF	; 255
 690:	7f ef       	ldi	r23, 0xFF	; 255
 692:	c5 01       	movw	r24, r10
 694:	2d d1       	rcall	.+602    	; 0x8f0 <strnlen_P>
 696:	4c 01       	movw	r8, r24
 698:	f3 2d       	mov	r31, r3
 69a:	f0 68       	ori	r31, 0x80	; 128
 69c:	3f 2e       	mov	r3, r31
 69e:	82 01       	movw	r16, r4
 6a0:	33 fc       	sbrc	r3, 3
 6a2:	19 c0       	rjmp	.+50     	; 0x6d6 <vfprintf+0x1e0>
 6a4:	82 2d       	mov	r24, r2
 6a6:	90 e0       	ldi	r25, 0x00	; 0
 6a8:	88 16       	cp	r8, r24
 6aa:	99 06       	cpc	r9, r25
 6ac:	a0 f4       	brcc	.+40     	; 0x6d6 <vfprintf+0x1e0>
 6ae:	b6 01       	movw	r22, r12
 6b0:	80 e2       	ldi	r24, 0x20	; 32
 6b2:	90 e0       	ldi	r25, 0x00	; 0
 6b4:	33 d1       	rcall	.+614    	; 0x91c <fputc>
 6b6:	2a 94       	dec	r2
 6b8:	f5 cf       	rjmp	.-22     	; 0x6a4 <vfprintf+0x1ae>
 6ba:	f5 01       	movw	r30, r10
 6bc:	37 fc       	sbrc	r3, 7
 6be:	85 91       	lpm	r24, Z+
 6c0:	37 fe       	sbrs	r3, 7
 6c2:	81 91       	ld	r24, Z+
 6c4:	5f 01       	movw	r10, r30
 6c6:	b6 01       	movw	r22, r12
 6c8:	90 e0       	ldi	r25, 0x00	; 0
 6ca:	28 d1       	rcall	.+592    	; 0x91c <fputc>
 6cc:	21 10       	cpse	r2, r1
 6ce:	2a 94       	dec	r2
 6d0:	21 e0       	ldi	r18, 0x01	; 1
 6d2:	82 1a       	sub	r8, r18
 6d4:	91 08       	sbc	r9, r1
 6d6:	81 14       	cp	r8, r1
 6d8:	91 04       	cpc	r9, r1
 6da:	79 f7       	brne	.-34     	; 0x6ba <vfprintf+0x1c4>
 6dc:	e1 c0       	rjmp	.+450    	; 0x8a0 <vfprintf+0x3aa>
 6de:	84 36       	cpi	r24, 0x64	; 100
 6e0:	11 f0       	breq	.+4      	; 0x6e6 <vfprintf+0x1f0>
 6e2:	89 36       	cpi	r24, 0x69	; 105
 6e4:	39 f5       	brne	.+78     	; 0x734 <vfprintf+0x23e>
 6e6:	f8 01       	movw	r30, r16
 6e8:	37 fe       	sbrs	r3, 7
 6ea:	07 c0       	rjmp	.+14     	; 0x6fa <vfprintf+0x204>
 6ec:	60 81       	ld	r22, Z
 6ee:	71 81       	ldd	r23, Z+1	; 0x01
 6f0:	82 81       	ldd	r24, Z+2	; 0x02
 6f2:	93 81       	ldd	r25, Z+3	; 0x03
 6f4:	0c 5f       	subi	r16, 0xFC	; 252
 6f6:	1f 4f       	sbci	r17, 0xFF	; 255
 6f8:	08 c0       	rjmp	.+16     	; 0x70a <vfprintf+0x214>
 6fa:	60 81       	ld	r22, Z
 6fc:	71 81       	ldd	r23, Z+1	; 0x01
 6fe:	07 2e       	mov	r0, r23
 700:	00 0c       	add	r0, r0
 702:	88 0b       	sbc	r24, r24
 704:	99 0b       	sbc	r25, r25
 706:	0e 5f       	subi	r16, 0xFE	; 254
 708:	1f 4f       	sbci	r17, 0xFF	; 255
 70a:	f3 2d       	mov	r31, r3
 70c:	ff 76       	andi	r31, 0x6F	; 111
 70e:	3f 2e       	mov	r3, r31
 710:	97 ff       	sbrs	r25, 7
 712:	09 c0       	rjmp	.+18     	; 0x726 <vfprintf+0x230>
 714:	90 95       	com	r25
 716:	80 95       	com	r24
 718:	70 95       	com	r23
 71a:	61 95       	neg	r22
 71c:	7f 4f       	sbci	r23, 0xFF	; 255
 71e:	8f 4f       	sbci	r24, 0xFF	; 255
 720:	9f 4f       	sbci	r25, 0xFF	; 255
 722:	f0 68       	ori	r31, 0x80	; 128
 724:	3f 2e       	mov	r3, r31
 726:	2a e0       	ldi	r18, 0x0A	; 10
 728:	30 e0       	ldi	r19, 0x00	; 0
 72a:	a3 01       	movw	r20, r6
 72c:	33 d1       	rcall	.+614    	; 0x994 <__ultoa_invert>
 72e:	88 2e       	mov	r8, r24
 730:	86 18       	sub	r8, r6
 732:	44 c0       	rjmp	.+136    	; 0x7bc <vfprintf+0x2c6>
 734:	85 37       	cpi	r24, 0x75	; 117
 736:	31 f4       	brne	.+12     	; 0x744 <vfprintf+0x24e>
 738:	23 2d       	mov	r18, r3
 73a:	2f 7e       	andi	r18, 0xEF	; 239
 73c:	b2 2e       	mov	r11, r18
 73e:	2a e0       	ldi	r18, 0x0A	; 10
 740:	30 e0       	ldi	r19, 0x00	; 0
 742:	25 c0       	rjmp	.+74     	; 0x78e <vfprintf+0x298>
 744:	93 2d       	mov	r25, r3
 746:	99 7f       	andi	r25, 0xF9	; 249
 748:	b9 2e       	mov	r11, r25
 74a:	8f 36       	cpi	r24, 0x6F	; 111
 74c:	c1 f0       	breq	.+48     	; 0x77e <vfprintf+0x288>
 74e:	18 f4       	brcc	.+6      	; 0x756 <vfprintf+0x260>
 750:	88 35       	cpi	r24, 0x58	; 88
 752:	79 f0       	breq	.+30     	; 0x772 <vfprintf+0x27c>
 754:	ae c0       	rjmp	.+348    	; 0x8b2 <vfprintf+0x3bc>
 756:	80 37       	cpi	r24, 0x70	; 112
 758:	19 f0       	breq	.+6      	; 0x760 <vfprintf+0x26a>
 75a:	88 37       	cpi	r24, 0x78	; 120
 75c:	21 f0       	breq	.+8      	; 0x766 <vfprintf+0x270>
 75e:	a9 c0       	rjmp	.+338    	; 0x8b2 <vfprintf+0x3bc>
 760:	e9 2f       	mov	r30, r25
 762:	e0 61       	ori	r30, 0x10	; 16
 764:	be 2e       	mov	r11, r30
 766:	b4 fe       	sbrs	r11, 4
 768:	0d c0       	rjmp	.+26     	; 0x784 <vfprintf+0x28e>
 76a:	fb 2d       	mov	r31, r11
 76c:	f4 60       	ori	r31, 0x04	; 4
 76e:	bf 2e       	mov	r11, r31
 770:	09 c0       	rjmp	.+18     	; 0x784 <vfprintf+0x28e>
 772:	34 fe       	sbrs	r3, 4
 774:	0a c0       	rjmp	.+20     	; 0x78a <vfprintf+0x294>
 776:	29 2f       	mov	r18, r25
 778:	26 60       	ori	r18, 0x06	; 6
 77a:	b2 2e       	mov	r11, r18
 77c:	06 c0       	rjmp	.+12     	; 0x78a <vfprintf+0x294>
 77e:	28 e0       	ldi	r18, 0x08	; 8
 780:	30 e0       	ldi	r19, 0x00	; 0
 782:	05 c0       	rjmp	.+10     	; 0x78e <vfprintf+0x298>
 784:	20 e1       	ldi	r18, 0x10	; 16
 786:	30 e0       	ldi	r19, 0x00	; 0
 788:	02 c0       	rjmp	.+4      	; 0x78e <vfprintf+0x298>
 78a:	20 e1       	ldi	r18, 0x10	; 16
 78c:	32 e0       	ldi	r19, 0x02	; 2
 78e:	f8 01       	movw	r30, r16
 790:	b7 fe       	sbrs	r11, 7
 792:	07 c0       	rjmp	.+14     	; 0x7a2 <vfprintf+0x2ac>
 794:	60 81       	ld	r22, Z
 796:	71 81       	ldd	r23, Z+1	; 0x01
 798:	82 81       	ldd	r24, Z+2	; 0x02
 79a:	93 81       	ldd	r25, Z+3	; 0x03
 79c:	0c 5f       	subi	r16, 0xFC	; 252
 79e:	1f 4f       	sbci	r17, 0xFF	; 255
 7a0:	06 c0       	rjmp	.+12     	; 0x7ae <vfprintf+0x2b8>
 7a2:	60 81       	ld	r22, Z
 7a4:	71 81       	ldd	r23, Z+1	; 0x01
 7a6:	80 e0       	ldi	r24, 0x00	; 0
 7a8:	90 e0       	ldi	r25, 0x00	; 0
 7aa:	0e 5f       	subi	r16, 0xFE	; 254
 7ac:	1f 4f       	sbci	r17, 0xFF	; 255
 7ae:	a3 01       	movw	r20, r6
 7b0:	f1 d0       	rcall	.+482    	; 0x994 <__ultoa_invert>
 7b2:	88 2e       	mov	r8, r24
 7b4:	86 18       	sub	r8, r6
 7b6:	fb 2d       	mov	r31, r11
 7b8:	ff 77       	andi	r31, 0x7F	; 127
 7ba:	3f 2e       	mov	r3, r31
 7bc:	36 fe       	sbrs	r3, 6
 7be:	0d c0       	rjmp	.+26     	; 0x7da <vfprintf+0x2e4>
 7c0:	23 2d       	mov	r18, r3
 7c2:	2e 7f       	andi	r18, 0xFE	; 254
 7c4:	a2 2e       	mov	r10, r18
 7c6:	89 14       	cp	r8, r9
 7c8:	58 f4       	brcc	.+22     	; 0x7e0 <vfprintf+0x2ea>
 7ca:	34 fe       	sbrs	r3, 4
 7cc:	0b c0       	rjmp	.+22     	; 0x7e4 <vfprintf+0x2ee>
 7ce:	32 fc       	sbrc	r3, 2
 7d0:	09 c0       	rjmp	.+18     	; 0x7e4 <vfprintf+0x2ee>
 7d2:	83 2d       	mov	r24, r3
 7d4:	8e 7e       	andi	r24, 0xEE	; 238
 7d6:	a8 2e       	mov	r10, r24
 7d8:	05 c0       	rjmp	.+10     	; 0x7e4 <vfprintf+0x2ee>
 7da:	b8 2c       	mov	r11, r8
 7dc:	a3 2c       	mov	r10, r3
 7de:	03 c0       	rjmp	.+6      	; 0x7e6 <vfprintf+0x2f0>
 7e0:	b8 2c       	mov	r11, r8
 7e2:	01 c0       	rjmp	.+2      	; 0x7e6 <vfprintf+0x2f0>
 7e4:	b9 2c       	mov	r11, r9
 7e6:	a4 fe       	sbrs	r10, 4
 7e8:	0f c0       	rjmp	.+30     	; 0x808 <vfprintf+0x312>
 7ea:	fe 01       	movw	r30, r28
 7ec:	e8 0d       	add	r30, r8
 7ee:	f1 1d       	adc	r31, r1
 7f0:	80 81       	ld	r24, Z
 7f2:	80 33       	cpi	r24, 0x30	; 48
 7f4:	21 f4       	brne	.+8      	; 0x7fe <vfprintf+0x308>
 7f6:	9a 2d       	mov	r25, r10
 7f8:	99 7e       	andi	r25, 0xE9	; 233
 7fa:	a9 2e       	mov	r10, r25
 7fc:	09 c0       	rjmp	.+18     	; 0x810 <vfprintf+0x31a>
 7fe:	a2 fe       	sbrs	r10, 2
 800:	06 c0       	rjmp	.+12     	; 0x80e <vfprintf+0x318>
 802:	b3 94       	inc	r11
 804:	b3 94       	inc	r11
 806:	04 c0       	rjmp	.+8      	; 0x810 <vfprintf+0x31a>
 808:	8a 2d       	mov	r24, r10
 80a:	86 78       	andi	r24, 0x86	; 134
 80c:	09 f0       	breq	.+2      	; 0x810 <vfprintf+0x31a>
 80e:	b3 94       	inc	r11
 810:	a3 fc       	sbrc	r10, 3
 812:	10 c0       	rjmp	.+32     	; 0x834 <vfprintf+0x33e>
 814:	a0 fe       	sbrs	r10, 0
 816:	06 c0       	rjmp	.+12     	; 0x824 <vfprintf+0x32e>
 818:	b2 14       	cp	r11, r2
 81a:	80 f4       	brcc	.+32     	; 0x83c <vfprintf+0x346>
 81c:	28 0c       	add	r2, r8
 81e:	92 2c       	mov	r9, r2
 820:	9b 18       	sub	r9, r11
 822:	0d c0       	rjmp	.+26     	; 0x83e <vfprintf+0x348>
 824:	b2 14       	cp	r11, r2
 826:	58 f4       	brcc	.+22     	; 0x83e <vfprintf+0x348>
 828:	b6 01       	movw	r22, r12
 82a:	80 e2       	ldi	r24, 0x20	; 32
 82c:	90 e0       	ldi	r25, 0x00	; 0
 82e:	76 d0       	rcall	.+236    	; 0x91c <fputc>
 830:	b3 94       	inc	r11
 832:	f8 cf       	rjmp	.-16     	; 0x824 <vfprintf+0x32e>
 834:	b2 14       	cp	r11, r2
 836:	18 f4       	brcc	.+6      	; 0x83e <vfprintf+0x348>
 838:	2b 18       	sub	r2, r11
 83a:	02 c0       	rjmp	.+4      	; 0x840 <vfprintf+0x34a>
 83c:	98 2c       	mov	r9, r8
 83e:	21 2c       	mov	r2, r1
 840:	a4 fe       	sbrs	r10, 4
 842:	0f c0       	rjmp	.+30     	; 0x862 <vfprintf+0x36c>
 844:	b6 01       	movw	r22, r12
 846:	80 e3       	ldi	r24, 0x30	; 48
 848:	90 e0       	ldi	r25, 0x00	; 0
 84a:	68 d0       	rcall	.+208    	; 0x91c <fputc>
 84c:	a2 fe       	sbrs	r10, 2
 84e:	16 c0       	rjmp	.+44     	; 0x87c <vfprintf+0x386>
 850:	a1 fc       	sbrc	r10, 1
 852:	03 c0       	rjmp	.+6      	; 0x85a <vfprintf+0x364>
 854:	88 e7       	ldi	r24, 0x78	; 120
 856:	90 e0       	ldi	r25, 0x00	; 0
 858:	02 c0       	rjmp	.+4      	; 0x85e <vfprintf+0x368>
 85a:	88 e5       	ldi	r24, 0x58	; 88
 85c:	90 e0       	ldi	r25, 0x00	; 0
 85e:	b6 01       	movw	r22, r12
 860:	0c c0       	rjmp	.+24     	; 0x87a <vfprintf+0x384>
 862:	8a 2d       	mov	r24, r10
 864:	86 78       	andi	r24, 0x86	; 134
 866:	51 f0       	breq	.+20     	; 0x87c <vfprintf+0x386>
 868:	a1 fe       	sbrs	r10, 1
 86a:	02 c0       	rjmp	.+4      	; 0x870 <vfprintf+0x37a>
 86c:	8b e2       	ldi	r24, 0x2B	; 43
 86e:	01 c0       	rjmp	.+2      	; 0x872 <vfprintf+0x37c>
 870:	80 e2       	ldi	r24, 0x20	; 32
 872:	a7 fc       	sbrc	r10, 7
 874:	8d e2       	ldi	r24, 0x2D	; 45
 876:	b6 01       	movw	r22, r12
 878:	90 e0       	ldi	r25, 0x00	; 0
 87a:	50 d0       	rcall	.+160    	; 0x91c <fputc>
 87c:	89 14       	cp	r8, r9
 87e:	30 f4       	brcc	.+12     	; 0x88c <vfprintf+0x396>
 880:	b6 01       	movw	r22, r12
 882:	80 e3       	ldi	r24, 0x30	; 48
 884:	90 e0       	ldi	r25, 0x00	; 0
 886:	4a d0       	rcall	.+148    	; 0x91c <fputc>
 888:	9a 94       	dec	r9
 88a:	f8 cf       	rjmp	.-16     	; 0x87c <vfprintf+0x386>
 88c:	8a 94       	dec	r8
 88e:	f3 01       	movw	r30, r6
 890:	e8 0d       	add	r30, r8
 892:	f1 1d       	adc	r31, r1
 894:	80 81       	ld	r24, Z
 896:	b6 01       	movw	r22, r12
 898:	90 e0       	ldi	r25, 0x00	; 0
 89a:	40 d0       	rcall	.+128    	; 0x91c <fputc>
 89c:	81 10       	cpse	r8, r1
 89e:	f6 cf       	rjmp	.-20     	; 0x88c <vfprintf+0x396>
 8a0:	22 20       	and	r2, r2
 8a2:	09 f4       	brne	.+2      	; 0x8a6 <vfprintf+0x3b0>
 8a4:	4e ce       	rjmp	.-868    	; 0x542 <vfprintf+0x4c>
 8a6:	b6 01       	movw	r22, r12
 8a8:	80 e2       	ldi	r24, 0x20	; 32
 8aa:	90 e0       	ldi	r25, 0x00	; 0
 8ac:	37 d0       	rcall	.+110    	; 0x91c <fputc>
 8ae:	2a 94       	dec	r2
 8b0:	f7 cf       	rjmp	.-18     	; 0x8a0 <vfprintf+0x3aa>
 8b2:	f6 01       	movw	r30, r12
 8b4:	86 81       	ldd	r24, Z+6	; 0x06
 8b6:	97 81       	ldd	r25, Z+7	; 0x07
 8b8:	02 c0       	rjmp	.+4      	; 0x8be <vfprintf+0x3c8>
 8ba:	8f ef       	ldi	r24, 0xFF	; 255
 8bc:	9f ef       	ldi	r25, 0xFF	; 255
 8be:	2b 96       	adiw	r28, 0x0b	; 11
 8c0:	0f b6       	in	r0, 0x3f	; 63
 8c2:	f8 94       	cli
 8c4:	de bf       	out	0x3e, r29	; 62
 8c6:	0f be       	out	0x3f, r0	; 63
 8c8:	cd bf       	out	0x3d, r28	; 61
 8ca:	df 91       	pop	r29
 8cc:	cf 91       	pop	r28
 8ce:	1f 91       	pop	r17
 8d0:	0f 91       	pop	r16
 8d2:	ff 90       	pop	r15
 8d4:	ef 90       	pop	r14
 8d6:	df 90       	pop	r13
 8d8:	cf 90       	pop	r12
 8da:	bf 90       	pop	r11
 8dc:	af 90       	pop	r10
 8de:	9f 90       	pop	r9
 8e0:	8f 90       	pop	r8
 8e2:	7f 90       	pop	r7
 8e4:	6f 90       	pop	r6
 8e6:	5f 90       	pop	r5
 8e8:	4f 90       	pop	r4
 8ea:	3f 90       	pop	r3
 8ec:	2f 90       	pop	r2
 8ee:	08 95       	ret

000008f0 <strnlen_P>:
 8f0:	fc 01       	movw	r30, r24
 8f2:	05 90       	lpm	r0, Z+
 8f4:	61 50       	subi	r22, 0x01	; 1
 8f6:	70 40       	sbci	r23, 0x00	; 0
 8f8:	01 10       	cpse	r0, r1
 8fa:	d8 f7       	brcc	.-10     	; 0x8f2 <strnlen_P+0x2>
 8fc:	80 95       	com	r24
 8fe:	90 95       	com	r25
 900:	8e 0f       	add	r24, r30
 902:	9f 1f       	adc	r25, r31
 904:	08 95       	ret

00000906 <strnlen>:
 906:	fc 01       	movw	r30, r24
 908:	61 50       	subi	r22, 0x01	; 1
 90a:	70 40       	sbci	r23, 0x00	; 0
 90c:	01 90       	ld	r0, Z+
 90e:	01 10       	cpse	r0, r1
 910:	d8 f7       	brcc	.-10     	; 0x908 <strnlen+0x2>
 912:	80 95       	com	r24
 914:	90 95       	com	r25
 916:	8e 0f       	add	r24, r30
 918:	9f 1f       	adc	r25, r31
 91a:	08 95       	ret

0000091c <fputc>:
 91c:	0f 93       	push	r16
 91e:	1f 93       	push	r17
 920:	cf 93       	push	r28
 922:	df 93       	push	r29
 924:	fb 01       	movw	r30, r22
 926:	23 81       	ldd	r18, Z+3	; 0x03
 928:	21 fd       	sbrc	r18, 1
 92a:	03 c0       	rjmp	.+6      	; 0x932 <fputc+0x16>
 92c:	8f ef       	ldi	r24, 0xFF	; 255
 92e:	9f ef       	ldi	r25, 0xFF	; 255
 930:	2c c0       	rjmp	.+88     	; 0x98a <fputc+0x6e>
 932:	22 ff       	sbrs	r18, 2
 934:	16 c0       	rjmp	.+44     	; 0x962 <fputc+0x46>
 936:	46 81       	ldd	r20, Z+6	; 0x06
 938:	57 81       	ldd	r21, Z+7	; 0x07
 93a:	24 81       	ldd	r18, Z+4	; 0x04
 93c:	35 81       	ldd	r19, Z+5	; 0x05
 93e:	42 17       	cp	r20, r18
 940:	53 07       	cpc	r21, r19
 942:	44 f4       	brge	.+16     	; 0x954 <fputc+0x38>
 944:	a0 81       	ld	r26, Z
 946:	b1 81       	ldd	r27, Z+1	; 0x01
 948:	9d 01       	movw	r18, r26
 94a:	2f 5f       	subi	r18, 0xFF	; 255
 94c:	3f 4f       	sbci	r19, 0xFF	; 255
 94e:	31 83       	std	Z+1, r19	; 0x01
 950:	20 83       	st	Z, r18
 952:	8c 93       	st	X, r24
 954:	26 81       	ldd	r18, Z+6	; 0x06
 956:	37 81       	ldd	r19, Z+7	; 0x07
 958:	2f 5f       	subi	r18, 0xFF	; 255
 95a:	3f 4f       	sbci	r19, 0xFF	; 255
 95c:	37 83       	std	Z+7, r19	; 0x07
 95e:	26 83       	std	Z+6, r18	; 0x06
 960:	14 c0       	rjmp	.+40     	; 0x98a <fputc+0x6e>
 962:	8b 01       	movw	r16, r22
 964:	ec 01       	movw	r28, r24
 966:	fb 01       	movw	r30, r22
 968:	00 84       	ldd	r0, Z+8	; 0x08
 96a:	f1 85       	ldd	r31, Z+9	; 0x09
 96c:	e0 2d       	mov	r30, r0
 96e:	09 95       	icall
 970:	89 2b       	or	r24, r25
 972:	e1 f6       	brne	.-72     	; 0x92c <fputc+0x10>
 974:	d8 01       	movw	r26, r16
 976:	16 96       	adiw	r26, 0x06	; 6
 978:	8d 91       	ld	r24, X+
 97a:	9c 91       	ld	r25, X
 97c:	17 97       	sbiw	r26, 0x07	; 7
 97e:	01 96       	adiw	r24, 0x01	; 1
 980:	17 96       	adiw	r26, 0x07	; 7
 982:	9c 93       	st	X, r25
 984:	8e 93       	st	-X, r24
 986:	16 97       	sbiw	r26, 0x06	; 6
 988:	ce 01       	movw	r24, r28
 98a:	df 91       	pop	r29
 98c:	cf 91       	pop	r28
 98e:	1f 91       	pop	r17
 990:	0f 91       	pop	r16
 992:	08 95       	ret

00000994 <__ultoa_invert>:
 994:	fa 01       	movw	r30, r20
 996:	aa 27       	eor	r26, r26
 998:	28 30       	cpi	r18, 0x08	; 8
 99a:	51 f1       	breq	.+84     	; 0x9f0 <__ultoa_invert+0x5c>
 99c:	20 31       	cpi	r18, 0x10	; 16
 99e:	81 f1       	breq	.+96     	; 0xa00 <__ultoa_invert+0x6c>
 9a0:	e8 94       	clt
 9a2:	6f 93       	push	r22
 9a4:	6e 7f       	andi	r22, 0xFE	; 254
 9a6:	6e 5f       	subi	r22, 0xFE	; 254
 9a8:	7f 4f       	sbci	r23, 0xFF	; 255
 9aa:	8f 4f       	sbci	r24, 0xFF	; 255
 9ac:	9f 4f       	sbci	r25, 0xFF	; 255
 9ae:	af 4f       	sbci	r26, 0xFF	; 255
 9b0:	b1 e0       	ldi	r27, 0x01	; 1
 9b2:	3e d0       	rcall	.+124    	; 0xa30 <__ultoa_invert+0x9c>
 9b4:	b4 e0       	ldi	r27, 0x04	; 4
 9b6:	3c d0       	rcall	.+120    	; 0xa30 <__ultoa_invert+0x9c>
 9b8:	67 0f       	add	r22, r23
 9ba:	78 1f       	adc	r23, r24
 9bc:	89 1f       	adc	r24, r25
 9be:	9a 1f       	adc	r25, r26
 9c0:	a1 1d       	adc	r26, r1
 9c2:	68 0f       	add	r22, r24
 9c4:	79 1f       	adc	r23, r25
 9c6:	8a 1f       	adc	r24, r26
 9c8:	91 1d       	adc	r25, r1
 9ca:	a1 1d       	adc	r26, r1
 9cc:	6a 0f       	add	r22, r26
 9ce:	71 1d       	adc	r23, r1
 9d0:	81 1d       	adc	r24, r1
 9d2:	91 1d       	adc	r25, r1
 9d4:	a1 1d       	adc	r26, r1
 9d6:	20 d0       	rcall	.+64     	; 0xa18 <__ultoa_invert+0x84>
 9d8:	09 f4       	brne	.+2      	; 0x9dc <__ultoa_invert+0x48>
 9da:	68 94       	set
 9dc:	3f 91       	pop	r19
 9de:	2a e0       	ldi	r18, 0x0A	; 10
 9e0:	26 9f       	mul	r18, r22
 9e2:	11 24       	eor	r1, r1
 9e4:	30 19       	sub	r19, r0
 9e6:	30 5d       	subi	r19, 0xD0	; 208
 9e8:	31 93       	st	Z+, r19
 9ea:	de f6       	brtc	.-74     	; 0x9a2 <__ultoa_invert+0xe>
 9ec:	cf 01       	movw	r24, r30
 9ee:	08 95       	ret
 9f0:	46 2f       	mov	r20, r22
 9f2:	47 70       	andi	r20, 0x07	; 7
 9f4:	40 5d       	subi	r20, 0xD0	; 208
 9f6:	41 93       	st	Z+, r20
 9f8:	b3 e0       	ldi	r27, 0x03	; 3
 9fa:	0f d0       	rcall	.+30     	; 0xa1a <__ultoa_invert+0x86>
 9fc:	c9 f7       	brne	.-14     	; 0x9f0 <__ultoa_invert+0x5c>
 9fe:	f6 cf       	rjmp	.-20     	; 0x9ec <__ultoa_invert+0x58>
 a00:	46 2f       	mov	r20, r22
 a02:	4f 70       	andi	r20, 0x0F	; 15
 a04:	40 5d       	subi	r20, 0xD0	; 208
 a06:	4a 33       	cpi	r20, 0x3A	; 58
 a08:	18 f0       	brcs	.+6      	; 0xa10 <__ultoa_invert+0x7c>
 a0a:	49 5d       	subi	r20, 0xD9	; 217
 a0c:	31 fd       	sbrc	r19, 1
 a0e:	40 52       	subi	r20, 0x20	; 32
 a10:	41 93       	st	Z+, r20
 a12:	02 d0       	rcall	.+4      	; 0xa18 <__ultoa_invert+0x84>
 a14:	a9 f7       	brne	.-22     	; 0xa00 <__ultoa_invert+0x6c>
 a16:	ea cf       	rjmp	.-44     	; 0x9ec <__ultoa_invert+0x58>
 a18:	b4 e0       	ldi	r27, 0x04	; 4
 a1a:	a6 95       	lsr	r26
 a1c:	97 95       	ror	r25
 a1e:	87 95       	ror	r24
 a20:	77 95       	ror	r23
 a22:	67 95       	ror	r22
 a24:	ba 95       	dec	r27
 a26:	c9 f7       	brne	.-14     	; 0xa1a <__ultoa_invert+0x86>
 a28:	00 97       	sbiw	r24, 0x00	; 0
 a2a:	61 05       	cpc	r22, r1
 a2c:	71 05       	cpc	r23, r1
 a2e:	08 95       	ret
 a30:	9b 01       	movw	r18, r22
 a32:	ac 01       	movw	r20, r24
 a34:	0a 2e       	mov	r0, r26
 a36:	06 94       	lsr	r0
 a38:	57 95       	ror	r21
 a3a:	47 95       	ror	r20
 a3c:	37 95       	ror	r19
 a3e:	27 95       	ror	r18
 a40:	ba 95       	dec	r27
 a42:	c9 f7       	brne	.-14     	; 0xa36 <__ultoa_invert+0xa2>
 a44:	62 0f       	add	r22, r18
 a46:	73 1f       	adc	r23, r19
 a48:	84 1f       	adc	r24, r20
 a4a:	95 1f       	adc	r25, r21
 a4c:	a0 1d       	adc	r26, r0
 a4e:	08 95       	ret

00000a50 <_exit>:
 a50:	f8 94       	cli

00000a52 <__stop_program>:
 a52:	ff cf       	rjmp	.-2      	; 0xa52 <__stop_program>
